<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">
	
	<context:component-scan base-package="com.mirim.biz"/>
	
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- DataSource 설정 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.h2.Driver"/>
		<property name="url" value="jdbc:h2:tcp://localhost/~/test"/>
		<property name="username" value="sa"/>
		<property name="password" value=""/>                         
	</bean>
	
	<!-- Spring JDBC 설정 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
<!--  
<bean id="around" class="com.mirim.biz.common.AroundAdvice"/>
		<aop:config>
			<aop:pointcut id="allPointcut" expression="execution(* com.mirim.biz..*Impl.*(..))" />
			
			<aop:aspect ref="around">
				<aop:around pointcut-ref="allPointcut" method="aroundLog"/>
			</aop:aspect>
		</aop:config>
	
	
<bean id="afterThrowing" class="com.mirim.biz.common.AfterThrowingAdvice"/>
	
		<aop:config>
			<aop:pointcut  id="allPointcut" expression="execution(* com.mirom.biz..*Impl.*(..))"/>
		
			<aop:aspect ref="afterThrowing">
				<aop:after-throwing pointcut-ref="allPointcut" method="exceptionLog" throwing="exceptObj"/>
			</aop:aspect>
	
		</aop:config>

	<bean id="before" class="com.mirim.biz.common.BeforeAdvice"/>
		<aop:config>
			<aop:pointcut id="allPointcut" expression="execution(* com.mirim.biz..*Impl.*(..))" />
			
			<aop:aspect ref="before">
				<aop:before pointcut-ref="allPointcut" method="beforeLog"/>
			</aop:aspect>
		</aop:config>
			
	<bean id="afterReturning" class="com.mirim.biz.common.AfterReturningAdvice"/>
		<aop:config>
			<aop:pointcut id="allPointcut" expression="execution(* com.mirim.biz..*Impl.*(..))" />
			<aop:pointcut id="getPointcut" expression="execution(* com.mirim.biz..*Impl.get*(..))" />
			
			<aop:aspect ref="afterReturning">
				<aop:after-returning pointcut-ref="allPointcut" method="afterLog" returning="retrunObj"/>
			</aop:aspect>
		</aop:config>
	
	<bean id="around" class="com.mirim.biz.common.AroundAdvice"/>
		<aop:config>
			<aop:pointcut id="allPointcut" expression="execution(* com.mirim.biz..*Impl.*(..))" />
			
			<aop:aspect ref="around">
				<aop:around pointcut-ref="allPointcut" method="aroundLog"/>
			</aop:aspect>
		</aop:config>
	
	<bean id="afterReturning" class="com.mirim.biz.common.AfterReturningAdvice"/>
		<aop:config>
			<aop:pointcut id="allPointcut" expression="execution(* com.mirim.biz..*Impl.*(..))" />
			<aop:pointcut id="getPointcut" expression="execution(* com.mirim.biz..*Impl.get*(..))" />
			
			<aop:aspect ref="afterReturning">
				<aop:after-returning pointcut-ref="allPointcut" method="afterLog"/>
			</aop:aspect>
		</aop:config>
		
		<bean id="afterThrowing" class="com.mirim.biz.common.AfterThrowingAdvice"/>
		<bean id="after" class="com.mirim.biz.common.AfterAdvice"/>
		<aop:config>
			<aop:pointcut id="allPointcut" expression="execution(* com.mirim.biz..*Impl.*(..))" />
			
			<aop:aspect ref="afterThrowing">
				<aop:after-throwing pointcut-ref="allPointcut" method="exceptionLog"/>
			</aop:aspect>
			
			<aop:aspect ref="after">
				<aop:after pointcut-ref="allPointcut" method="finallyLog"/>
			</aop:aspect>
		</aop:config>
-->
<!-- 
	<context:component-scan base-package="com.mirim.biz"/>
	
	<bean id="userService" class="com.mirim.biz.user.impl.UserServiceimpl">
		<property name="userDAO" ref="userDAO"/>
	</bean>
	
	<bean id="userDAO" class="com.mirim.biz.user.impl.UserDAO"></bean>

	<context:component-scan base-package="polymorphism"></context:component-scan>
	<bean class="polymorphism.SonySpeaker"/>

	
	<bean id="tv" class="polymorphism.SamsungTV">
		<property name="speaker" ref="apple"></property>
		<property name="price" value="500000"></property>			
	</bean>
	<bean id="sony" class="polymorphism.SonySpeaker"></bean>
	<bean id="apple" class="polymorphism.AppleSpeaker"></bean>
 -->
 </beans>
 

